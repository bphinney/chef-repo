#!/opt/chef/embedded/bin/ruby -W0

gem 'chef-api', '>= 0.5.1'
require 'chef-api'
include ChefAPI::Resource

ChefAPI::log_level = :fatal # Disables annoying SSL warning messages

File.open(ENV['HOME']+'/.chef/knife.rb').each do |line|
  if line.match("chef_server_url"); $client_uri = line.scan(/'([^']*)'/).join(" ");  end
  if line.match("client_key");      $client_key = line.scan(/'([^']*)'/).join(" ");  end
  if line.match("node_name");       $client_node = line.scan(/'([^']*)'/).join(" "); end
end

$connection = ChefAPI::Connection.new(
  client: $client_node,
  key:  $client_key,
  ssl_verify: false,
  endpoint: $client_uri
)

#def data_bag_item_ensure

# Ganked from /usr/bin/env_secmgmt.sh
def auth_ip_by_group(ip_array, listpage)
  ip_list = `curl --silent --user <%= node['atlassian']['wiki_user'] %>:<%= node['atlassian']['wiki_pass'] %> -G https://wiki.prometheanjira.com/display/OP/#{listpage} | grep 'wiki location'`.strip.gsub(/<\/?(span|label)[^>]*>/, "").scan(/[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/).uniq
 
  for x in 0..ip_list.length-1
    ip_array << ip_list[x].to_s if x != '0.0.0.0'
  end
  return ip_array.uniq.sort
end

old_whitelist = `knife data bag show apache whitelist | cut -c5-`

$full_whitelist = Array.new

'<%= @htaccessurl -%>'.split(' ').each {|url|

  $full_whitelist = auth_ip_by_group($full_whitelist,url.strip)

}

h1 = {}
for key in 0..($full_whitelist.size - 1)
  h1["#{key + 1}"] = $full_whitelist[key]
end

client_data = $connection.data_bags

ip_pull = client_data.fetch('apache').items.each do |item|
  $db_item = item
  if $db_item.id == 'whitelist'
   $db_item.data = h1.to_h
   $db_item.save! # TODO - Remove verbose
  end
end

new_whitelist = `knife data bag show apache whitelist | cut -c5-`

if "#{old_whitelist}" != "#{new_whitelist}" then
#  if "#{`knife environment list | grep -o -m1 staging`}" == 'staging' then
#    nodelist = `knife node list --env=staging | paste -d ' ' -s`.strip
#  else
#    nodelist = `knife node list | paste -d ' ' -s`.strip
#  end
  nodelist = `knife search node "recipes:prom-http\\:\\:default" | grep 'IP' | cut -d ":" -f2 | sed 's/\ //g' | paste -d ' ' -s`.strip
  `for i in #{nodelist}; do ssh -o ConnectTimeOut=5 $i [[ -f /etc/httpd/conf.d/.htaccess ]] \\&\\& \\{ chef-client -o 'recipe[prom-http::update_htaccess]' \\; \\}; done`
end

# check for existence of data bag whitelist, create if not there.
# possibly set up backup list
# set script with cron job to update template with allowed ips.

