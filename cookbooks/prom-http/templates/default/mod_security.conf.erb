LoadModule security2_module modules/mod_security2.so

<IfModule !mod_unique_id.c>
    LoadModule unique_id_module modules/mod_unique_id.so
</IfModule>
<IfModule mod_security2.c>
    # ModSecurity Core Rules Set configuration
      <% if node['platform_version'].to_i == '7' -%>
   #IncludeOptional modsecurity.d/*.conf
   #IncludeOptional modsecurity.d/activated_rules/*.conf
      <% else -%>
   Include modsecurity.d/*.conf
   Include modsecurity.d/activated_rules/*.conf
      <% end -%>
 
    # Default recommended configuration
    SecRuleEngine <%= @secruleengine %>
    SecRequestBodyAccess On
    SecRule REQUEST_HEADERS:Content-Type "text/xml" \
         "id:'200000',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"
    SecRequestBodyLimit 104857600
    SecRequestBodyNoFilesLimit 8388608
    SecRequestBodyInMemoryLimit 8388608
    SecRequestBodyLimitAction Reject
#    SecRule REQBODY_ERROR "!@eq 0" \
#    "id:'200001', phase:2,t:none,log,deny,status:400,msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2"
#    SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
#    "id:'200002',phase:2,t:none,log,deny,status:44,msg:'Multipart request body \
#    failed strict validation: \
#    PE %{REQBODY_PROCESSOR_ERROR}, \
#    BQ %{MULTIPART_BOUNDARY_QUOTED}, \
#    BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
#    DB %{MULTIPART_DATA_BEFORE}, \
#    DA %{MULTIPART_DATA_AFTER}, \
#    HF %{MULTIPART_HEADER_FOLDING}, \
#    LF %{MULTIPART_LF_LINE}, \
#    SM %{MULTIPART_MISSING_SEMICOLON}, \
#    IQ %{MULTIPART_INVALID_QUOTING}, \
#    IP %{MULTIPART_INVALID_PART}, \
#    IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
#    FL %{MULTIPART_FILE_LIMIT_EXCEEDED}'"

#    SecRule MULTIPART_UNMATCHED_BOUNDARY "!@eq 0" \
#    "id:'200003',phase:2,t:none,log,deny,status:44,msg:'Multipart parser detected a possible unmatched boundary.'"

    SecPcreMatchLimit 1000
    SecPcreMatchLimitRecursion 1000

    SecRule TX:/^MSC_/ "!@streq 0" \
            "id:'200004',phase:2,t:none,deny,msg:'ModSecurity internal error flagged: %{MATCHED_VAR_NAME}'"

    SecResponseBodyAccess Off
    SecDebugLog /var/log/httpd/modsec_debug.log
    SecDebugLogLevel 0
    SecAuditEngine RelevantOnly
    SecAuditLogRelevantStatus "^(?:5|4(?!(00|04)))"
    SecAuditLogParts ABIJDEFHZ
    SecAuditLogType Serial
    SecAuditLog /var/log/httpd/modsec_audit.log
    SecArgumentSeparator &
    SecCookieFormat 0
    SecTmpDir /var/lib/mod_security
    SecDataDir /var/lib/mod_security

# Bash Shellshock rules
    SecRule REQUEST_HEADERS "^\(\) {" "phase:1,deny,id:1000000,t:urlDecode,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
#SERVER_PROTOCOL values:
    SecRule REQUEST_LINE "\(\) {" "phase:1,deny,id:1000001,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
#GET/POST names:
    SecRule ARGS_NAMES "^\(\) {" "phase:2,deny,id:1000002,t:urlDecode,t:urlDecodeUni,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
#GET/POST values:
    SecRule ARGS "^\(\) {" "phase:2,deny,id:1000003,t:urlDecode,t:urlDecodeUni,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
#File names for uploads:
    SecRule FILES_NAMES "^\(\) {" "phase:2,deny,id:1000004,t:urlDecode,t:urlDecodeUni,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
# Additional Headers
    SecRule REQUEST_HEADERS "^\{\} {" "phase:1,deny,id:1000005,t:urlDecode,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
    SecRule REQUEST_LINE "\{\} {" "phase:1,deny,id:1000006,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
    SecRule ARGS_NAMES "^\{\} {" "phase:2,deny,id:1000007,t:urlDecode,t:urlDecodeUni,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
    SecRule ARGS "^\{\} {" "phase:2,deny,id:1000008,t:urlDecode,t:urlDecodeUni,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"
    SecRule FILES_NAMES "^\{\} {" "phase:2,deny,id:1000009,t:urlDecode,t:urlDecodeUni,status:403,log,msg:'CVE-2014-6271 - Bash Attack'"

</IfModule>
